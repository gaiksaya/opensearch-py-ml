lib = library(identifier: 'jenkins@modify-s3-download-test-1', retriever: modernSCM([
    $class: 'GitSCMSource',
    remote: 'https://github.com/gaiksaya/opensearch-build-libraries.git',
]))

pipeline {
    agent
    {
        docker {
            label 'Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:release-centos7-clients-v2'
            alwaysPull true
        }
    }
    options {
        timeout(time: 1, unit: 'HOURS')
    }
    parameters {
        string(
            name: 'BASE_DOWNLOAD_PATH',
            description: 'Base path of S3 to download from eg:ml-models/huggingface/sentence-transformers/all-distilroberta-v1/',
            trim: true
        )
        string(
            name: 'VERSION',
            description: 'Version number of the model',
            trim: true
        )
        }
    environment {
        ARTIFACT_PATH = "${BASE_DOWNLOAD_PATH}/${VERSION}/"
        UPLOAD_PATH = "models/ml-models"
        BUCKET_NAME = credentials('ml-model-bucket-name')
    }
    stages{
        stage('Parameters Check') {
            steps {
                script {
                    if(BASE_DOWNLOAD_PATH.isEmpty() || VERSION.isEmpty()) {
                        currentBuild.result = 'ABORTED'
                        error('Parameters cannot be empty! Please provide the correct values.')
                    }
                }
            }
        }
        stage('Download the artifacts') {
            steps {
                script {
                    downloadFromS3(
                        assumedRoleName: 'gaiksaya-ml-models-role',
                        roleAccountNumberCred: 'ml-model-account-number',
                        downloadPath: "${ARTIFACT_PATH}",
                        bucketName: "${BUCKET_NAME}",
                        localPath: "${WORKSPACE}/.",
                        force: true
                    )
                    sh("ls -l")
                }
            }
        }
        // stage('Sign and Release the artifacts') {
        //     steps {
        //         script {
        //             sh "ls -l"
        //             publishToArtifactsProdBucket(
        //                 assumedRoleName: 'ml-model-upload-role',
        //                 source: "${WORKSPACE}/ml-models",
        //                 destination: "${UPLOAD_PATH}",
        //                 signingPlatform: 'linux',
        //                 sigType: '.sig',
        //                 sigOverwrite: true
        //             )
        //         }
        //     }
        // }
    }
    post {
        always {
            script {
                postCleanup()
                }
            }
        }
    }
